#!/usr/bin/env bash
set -eo pipefail

# default variables
: "${PORT:=8000}"
: "${SLEEP:=1}"
: "${TRIES:=60}"

usage() {
  echo "usage: bin/run web|web-dev|worker|scheduler|test"
  exit 1
}

run_tests() {
  python manage.py collectstatic --noinput
  coverage erase
  coverage run -m py.test
  coverage report
}

wait_for() {
  tries=0
  echo "Waiting for $1 to listen on $2..."
  while true; do
    [[ $tries -lt $TRIES ]] || return
    (echo > /dev/tcp/$1/$2) >/dev/null 2>&1
    result=
    [[ $? -eq 0 ]] && return
    sleep $SLEEP
    tries=$((tries + 1))
  done
}

[ $# -lt 1 ] && usage

# Only wait for backend services in development
# http://stackoverflow.com/a/13864829
[ ! -z ${DEVELOPMENT+check} ] && wait_for db 5432 && wait_for redis 6379

case $1 in
  web)
    newrelic-admin run-python manage.py migrate
    exec newrelic-admin run-program gunicorn atmo.wsgi:application -b 0.0.0.0:${PORT} --workers 4 --access-logfile -
    ;;
  web-dev)
    python manage.py migrate
    exec python manage.py runserver 0.0.0.0:${PORT}
    ;;
  worker)
    exec newrelic-admin run-python manage.py rqworker --worker-class=rq.SimpleWorker default
    ;;
  scheduler)
    exec newrelic-admin run-python manage.py rqscheduler --retry
    ;;
  test)
    run_tests
    # submit coverage
    coverage xml
    env
    bash <(curl -s https://codecov.io/bash) -s /tmp
    ;;
  *)
    exec "$@"
    ;;
esac
